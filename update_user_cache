#!/usr/bin/python2.7
# -*- coding: utf-8 -*-
#
# Copyright 2021 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

from __future__ import print_function

import sys

from univention.office365.cache_helper import GROUP_USERS, GROUP_GROUPS, USER_AZURES
from univention.udm import UDM

udm = UDM.machine().version(1)


USER_AZURES.clear()
GROUP_USERS.clear()
GROUP_GROUPS.clear()


i = 0
print('Updating %s. This may take a while...' % (USER_AZURES.db_file,))
print('Going through all users enabled for Microsoft365')
for obj in udm.get('users/user').search('UniventionOffice365Enabled=1'):
	i += 1
	if i % 1000 == 0:
		print('\rAdding user #%d' % i, end='')
		sys.stdout.flush()
	USER_AZURES.save(obj.dn, obj.props.UniventionOffice365ADConnectionAlias)
print('')
print('%d users added successfully' % i)


i = 0
print('Updating %s and %s. This may take a while...' % (GROUP_USERS.db_file, GROUP_GROUPS.db_file))
print('Going through all groups')
for obj in udm.get('groups/group').search():
	i += 1
	if i % 1000 == 0:
		print('\rAdding group #%d' % i, end='')
		sys.stdout.flush()
	GROUP_USERS.save(obj.dn, obj.props.users)
	GROUP_GROUPS.save(obj.dn, obj.props.nestedGroup)
print('')
print('%d groups added successfully' % i)
