#!/usr/share/ucs-test/runner python3
## -*- coding: utf-8 -*-
## desc: test uninitialize, initialize, load and store with multi Azure AD connection support
## tags: [apptest]
## exposure: dangerous
## packages:
##   - univention-office365

import os
import uuid
import datetime
import shutil
import atexit

import univention.testing.strings as uts
import univention.testing.utils as utils

from univention.office365.azure_auth import AzureAuth, AzureADConnectionHandler

adconnection1 = uts.random_username()
adconnection2 = uts.random_username()
adconnection3 = uts.random_username()

for adconnection in (adconnection1, adconnection2, adconnection3):
	AzureADConnectionHandler.create_new_adconnection(adconnection)
	CONFDIR = AzureADConnectionHandler.get_conf_path("CONFDIR", adconnection)
	print('*** adconnection={!r} CONFDIR={!r}'.format(adconnection, CONFDIR))
	# os.mkdir(CONFDIR)

	DATETIME_FORMAT = "%Y-%m-%d_%H:%M:%S"
	IDS_FILE = AzureADConnectionHandler.get_conf_path("IDS_FILE", adconnection)
	IDS_FILE_BAK = "{}.bak_{}".format(IDS_FILE, datetime.datetime.now().strftime(DATETIME_FORMAT.replace(" ", "_")))

	try:
		shutil.move(IDS_FILE, IDS_FILE_BAK)
		shutil.copy2(IDS_FILE_BAK, IDS_FILE)
		has_backup = True
	except IOError:
		has_backup = False


	@atexit.register
	def move_ids_file_back():
		if has_backup:
			try:
				shutil.move(IDS_FILE_BAK, IDS_FILE)
			except IOError:
				pass

	AzureAuth.uninitialize(adconnection)

	if AzureAuth.is_initialized(adconnection):
		utils.fail("App should not be initialized.")

	test_ids = dict(
		adconnection_id=str(uuid.uuid1()),
		client_id=uts.random_string(),
		reply_url=uts.random_string(),
		domain="{}.{}".format(uts.random_string(), uts.random_string())
	)

	AzureAuth.store_azure_ids(adconnection_alias=adconnection, **test_ids)
	AzureAuth.store_tokens(adconnection_alias=adconnection, consent_given=True)

	if not AzureAuth.is_initialized(adconnection):
		utils.fail("App should be initialized.")

	loaded_ids = AzureAuth.load_azure_ids(adconnection)

	if not loaded_ids == test_ids:
		utils.fail("Stored and loaded data differ.")

	AzureADConnectionHandler.remove_adconnection(adconnection)


print("*** All went well.")
