#!/usr/bin/env python2.7
# -*- coding: utf-8 -*-
#
# Univention Microsoft 365 - print users and groups
#
# Copyright 2016-2021 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

from univention.config_registry import ConfigRegistry
from univention.office365.azure_handler import AzureHandler
import univention.admin.uldap
import univention.admin.objects
from optparse import OptionParser
import traceback
import pprint


# Query local LDAP for users
# Get their azure account object and pretty-print it
if __name__ == '__main__':
	parser = OptionParser()
	parser.add_option('-o', '--onlyone', dest='oneuser', help='option: uid; Only look at and modify one user (for testing purposes)')
	options, args = parser.parse_args()

	ucr = ConfigRegistry()
	ucr.load()
	base = ucr["ldap/base"]
	ah = AzureHandler(ucr, "pwdLastSet")
	lo, po = univention.admin.uldap.getAdminConnection()
	univention.admin.modules.update()
	usermod = univention.admin.modules.get('users/user')
	univention.admin.modules.init(lo, po, usermod)
	config = univention.admin.config.config()

	pp = pprint.PrettyPrinter(indent=2)

	lookup_result = []
	if options.oneuser:
		lookup_result = usermod.lookup(config, lo, filter_s="uid=%s" % options.oneuser, base=base)
	else:
		lookup_result = usermod.lookup(config, lo, filter_s="(&(univentionOffice365Enabled=1)(univentionObjectType=users/user))", base=base)

	for ldap_user in lookup_result:
		try:
			print "Local user: %s" % ldap_user["username"]
			pp.pprint(ah.list_users(objectid=ldap_user["UniventionOffice365ObjectID"]))
		except Exception as ex:
			traceback.print_exc()
			continue
